# docker-compose
version: "3"

services:
  p3db:
    image: mariadb
    restart: always
    container_name: project3_db
    ports:
      - "33060:3306"
    volumes:
      - ./databases/data:/var/lib/mysql # host에 db data 저장
    environment:
      TZ: Asia/Seoul
      MYSQL_ROOT_PASSWORD: project3
      MYSQL_DATABASE: project3
      MYSQL_USER: admin
      MYSQL_PASSWORD: project3
    networks:
      - default 
      - p3_net
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=project3 --execute \"SHOW DATABASES;\""
      interval: 4s
      timeout: 60s
      retries: 10

  p3api:
    tty: true # django run 환경변수
    image: django
    restart: always
    container_name: project3_api
    build:
      context: ./jaruda_back
    environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_HOST=rabbitmq
    command: >
      bash -c "
      python manage.py makemigrations && 
      python manage.py migrate && 
      python manage.py runserver 0.0.0.0:8000"  
    networks:
      - default 
      - p3_net
    ports:
      - "8000:8000"
    depends_on:
      p3db:
        condition: service_healthy
    # expose:
    #   - "8000" 

  rabbitmq:
    restart: unless-stopped
    container_name: project3_rabbitmq
    image: rabbitmq:3.7.14-management-alpine
    environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      - "5672:5672"
      - "15672:15672"

  # worker:
  #   restart: unless-stopped
  #   container_name: project3_celery_worker
  #   image: django
  #   environment:
  #     - RABBITMQ_USER=guest
  #     - RABBITMQ_PASSWORD=guest
  #     - RABBITMQ_HOST=rabbitmq
  #   command: >
  #     bash -c "celery -A jaruda_back worker --loglevel=info"
  #   depends_on:
  #     - p3api

  # beat:
  #   restart: unless-stopped
  #   container_name: project3_celery_beat
  #   image: django
  #   environment:
  #     - RABBITMQ_USER=guest
  #     - RABBITMQ_PASSWORD=guest
  #     - RABBITMQ_HOST=rabbitmq
  #   command: >
  #     bash -c "celery -A jaruda_back beat --loglevel=info"
  #   depends_on:
  #     - p3api

  # redis:
  #   container_name: redis_service
  #   image: redis
  #   ports:
  #     - "6379:6379"

networks:
  p3_net:
    driver: bridge